!function(c){var t={};function n(r){if(t[r])return t[r].exports;var l=t[r]={i:r,l:!1,exports:{}};return c[r].call(l.exports,l,l.exports,n),l.l=!0,l.exports}n.m=c,n.c=t,n.d=function(c,t,r){n.o(c,t)||Object.defineProperty(c,t,{enumerable:!0,get:r})},n.r=function(c){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(c,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(c,"__esModule",{value:!0})},n.t=function(c,t){if(1&t&&(c=n(c)),8&t)return c;if(4&t&&"object"==typeof c&&c&&c.__esModule)return c;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:c}),2&t&&"string"!=typeof c)for(var l in c)n.d(r,l,function(t){return c[t]}.bind(null,l));return r},n.n=function(c){var t=c&&c.__esModule?function(){return c.default}:function(){return c};return n.d(t,"a",t),t},n.o=function(c,t){return Object.prototype.hasOwnProperty.call(c,t)},n.p="",n(n.s=0)}([function(module,exports,__webpack_require__){"use strict";eval('\r\n\r\n// service worker registration - remove if you\'re not going to use it\r\n\r\nif ("serviceWorker" in navigator) {\r\n  window.addEventListener("load", function () {\r\n    navigator.serviceWorker.register("serviceworker.js").then(\r\n      function (registration) {\r\n        // Registration was successful\r\n        console.log(\r\n          "ServiceWorker registration successful with scope: ",\r\n          registration.scope\r\n        );\r\n      },\r\n      function (err) {\r\n        // registration failed :(\r\n        console.log("ServiceWorker registration failed: ", err);\r\n      }\r\n    );\r\n  });\r\n}\r\n\r\n// place your code below\r\nconst apiKey = "53c5e97675c8d3d8da07e56aec5a3a22";\r\n\r\n\r\n(function () {\r\n  var lastTime = 0;\r\n  var vendors = [\'ms\', \'moz\', \'webkit\', \'o\'];\r\n  for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n      window.requestAnimationFrame = window[vendors[x] + \'RequestAnimationFrame\'];\r\n      window.cancelAnimationFrame = window[vendors[x] + \'CancelAnimationFrame\'] || window[vendors[x] + \'CancelRequestAnimationFrame\'];\r\n  }\r\n\r\n  if (!window.requestAnimationFrame) window.requestAnimationFrame = function (callback, element) {\r\n      var currTime = new Date().getTime();\r\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n      var id = window.setTimeout(function () {\r\n          callback(currTime + timeToCall);\r\n      },\r\n      timeToCall);\r\n      lastTime = currTime + timeToCall;\r\n      return id;\r\n  };\r\n\r\n  if (!window.cancelAnimationFrame) window.cancelAnimationFrame = function (id) {\r\n      clearTimeout(id);\r\n  };\r\n}());\r\n\r\n\r\n\r\nfunction success(loc) {\r\n  const { coords } = loc;\r\n}\r\n\r\nfunction error(err) {\r\n  console.warn(`ERROR(${err.code}): ${err.message}`);\r\n}\r\n\r\nconst options = {\r\n  enableHighAccuracy: true,\r\n  timeout: 5000,\r\n  maximumAge: 0,\r\n};\r\n\r\nfunction consolValue(val) {\r\n  return val;\r\n}\r\n\r\nfunction location() {\r\n  return new Promise((resolve, reject) =>\r\n    navigator.geolocation.getCurrentPosition(resolve, error)\r\n  );\r\n}\r\n\r\nasync function getLocation() {\r\n  let position = await location();\r\n  position = await position.coords;\r\n  const { latitude, longitude } = position;\r\n\r\n  let weatherByPosition = await fetch(\r\n    `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric&lang=pl`\r\n  );\r\n  let weatherByHour = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&\r\n  exclude=hourly&appid=${apiKey}&units=metric&lang=pl`);\r\n  weatherByPosition = await weatherByPosition.json();\r\n  weatherByHour = await weatherByHour.json();\r\n  weatherByHour = weatherByHour.hourly;\r\n  const hourOfWeather = mapAndFilter(weatherByHour.map((obj) => obj.dt));\r\n  let temperature = filterTemperature(weatherByHour);\r\n  const temperatureCoords = temperatureToChartCoords(temperature);\r\n  \r\n  const tempPixels = temperatureToPixel(temperatureCoords);\r\n  const hoursPixels = hoursToPixel(getHoursCoords());\r\n  \r\n  const tempPoints = createTempObj(hoursPixels, tempPixels, hourOfWeather, temperature);\r\n\r\n  \r\n  \r\n\r\n  \r\n  \r\n  grid();\r\n  drawAxis(hourOfWeather);\r\n  await wait(500);\r\n  drawChart(temperatureCoords)\r\n  addPopUp(tempPoints);\r\n}\r\n\r\n\r\n\r\nconst canvas = document.getElementById("chartTemp__canvas");\r\ncanvas.width = 660;\r\ncanvas.height = 309;\r\nconst ctx = canvas.getContext("2d");\r\n\r\nfunction grid() {\r\n  let gridX = 40;\r\n  let gridY = 40;\r\n  const cellSize = 40;\r\n  ctx.beginPath();\r\n  ctx.strokeStyle = "lightgrey";\r\n\r\n  while (gridX <= canvas.width - 20) {\r\n    ctx.moveTo(gridX, 20);\r\n    ctx.lineTo(gridX, canvas.height - 20);\r\n    gridX += cellSize;\r\n  }\r\n  while (gridY <= canvas.height - 20) {\r\n    ctx.moveTo(20, gridY);\r\n    ctx.lineTo(canvas.width - 10, gridY);\r\n    gridY += cellSize;\r\n  }\r\n  ctx.stroke();\r\n}\r\n\r\nfunction blocks(count) {\r\n  return count * 40;\r\n}\r\n\r\nasync function drawAxis(hours) {\r\n  ctx.beginPath();\r\n  ctx.strokeStyle = "black";\r\n  ctx.moveTo(blocks(1), blocks(1 / 2));\r\n  ctx.lineTo(blocks(1), blocks(7));\r\n  ctx.lineTo(blocks(16), blocks(7));\r\n\r\n  ctx.moveTo(blocks(1), blocks(7));\r\n  let text = 0;\r\n  let textY = blocks(7);\r\n  for (let i = 1; i <= 7; i++) {\r\n    ctx.strokeText(text, blocks(1 / 2), textY);\r\n    textY -= 40;\r\n    text += 5;\r\n  }\r\n\r\n  ctx.moveTo(blocks(2), blocks(7));\r\n  let textX = blocks(1.9);\r\n\r\n  for (let i = 0; i <= 15; i++) {\r\n    ctx.strokeText(hours[i], textX, blocks(7.5));\r\n    textX += 40;\r\n  }\r\n  ctx.stroke();\r\n}\r\nfunction timestampToTime(stamp) {\r\n  let date = new Date(stamp * 1000);\r\n  return date.getHours();\r\n}\r\n\r\nfunction mapAndFilter(tempArray) {\r\n  tempArray = tempArray.map((el) => timestampToTime(el));\r\n  tempArray = tempArray.filter((el) => el % 2 == 0);\r\n  return tempArray;\r\n}\r\n\r\nfunction temperatureToChartCoords(temp){\r\n  let temperature = temp.map((el) => el / 5);\r\n  temperature = temperature.slice(0,15);\r\n  return temperature;\r\n}\r\n\r\nfunction getHoursCoords() {\r\n  let hourOfTemp = [...Array(17).keys()]\r\n  hourOfTemp = hourOfTemp.slice(2, 17);\r\n\r\n  return hourOfTemp;\r\n}\r\n\r\nfunction drawChart(temperature) {\r\n  const tempHours = getHoursCoords();\r\n  let i = 1;\r\n  function animation() {\r\n    if (i <= temperature.length) {\r\n      window.requestAnimationFrame(animation);\r\n    }\r\n    ctx.strokeStyle = "#FFE74A";\r\n    ctx.lineWidth = 3;\r\n    ctx.beginPath();\r\n    ctx.moveTo(blocks(tempHours[i-1]), 280 - blocks(temperature[i-1]));\r\n    ctx.arc(blocks(tempHours[i-1]), 280 - blocks(temperature[i-1]), 3, 0, Math.PI * 2, true);\r\n    ctx.lineTo(blocks(tempHours[i]), 280 - blocks(temperature[i]));\r\n    ctx.stroke();\r\n    i++;\r\n  }\r\n  animation();\r\n}\r\n\r\nasync function wait(ms) {\r\n  return new Promise(r => setTimeout(r, ms));\r\n}\r\n\r\nfunction getMousePosition(canvas, evt) {\r\n  let rect = canvas.getBoundingClientRect();\r\n  return {\r\n    x: evt.clientX - rect.left,\r\n    y: evt.clientY - rect.top\r\n  };\r\n}\r\n\r\nfunction filterTemperature(temperature) {\r\n  const temp = temperature\r\n    .map((obj) => obj.temp)\r\n    .filter((el, index) => index % 2 == 0);\r\n\r\n  return temp;\r\n}\r\n\r\nfunction temperatureToPixel(temp){\r\n  temp = temp.map(el => 280 - blocks(el));\r\n  return temp;\r\n}\r\n\r\nfunction hoursToPixel(hours) {\r\n  const hourrs = hours.map(el => blocks(el));\r\n  return hourrs;\r\n}\r\n\r\nfunction createTempObj(hour, temp, hourOfTemp, tempInHour){\r\n  const tempPointCoords = [];\r\n  for (let i = 0; i < temp.length; i++){\r\n    tempPointCoords.push({\r\n      x: hour[i],\r\n      y: temp[i],\r\n      xmin: hour[i] - 3,\r\n      xmax: hour[i] + 3,\r\n      ymin: temp[i] - 3,\r\n      ymax: temp[i] + 3,\r\n      hourTemp: {\r\n        hour: hourOfTemp[i],\r\n        temp: tempInHour[i]\r\n      },\r\n\r\n    })\r\n  }\r\n  return tempPointCoords;\r\n}\r\n\r\nfunction drawPoint(coords = {}, radius, color = \'white\') {\r\n  const mouseCoordinate = coords;\r\n  ctx.strokeStyle = color;\r\n  ctx.beginPath();\r\n  ctx.moveTo(mouseCoordinate.x, mouseCoordinate.y);\r\n  ctx.arc(mouseCoordinate.x, mouseCoordinate.y, radius, 0, Math.PI * 2, true);\r\n  ctx.fillStyle = color;\r\n  ctx.fill();\r\n  ctx.stroke();\r\n}\r\n\r\nlet condition = false;\r\nlet state = {};\r\nlet tooltip = document.getElementsByClassName("chartTemp__tooltip");\r\ntooltip = tooltip[0]\r\nfunction addPopUp(tempPoint) {\r\n  canvas.addEventListener(\'mousemove\', function(evt) {\r\n    const mouseCoords = getMousePosition(canvas, evt);\r\n    let boools = tempPoint.filter(el => {\r\n      const a = el.xmin <= mouseCoords.x;\r\n      const b = mouseCoords.x <= el.xmax;\r\n      const c = el.ymin <= mouseCoords.y;\r\n      const d = mouseCoords.y <= el.ymax;\r\n      return (a && b && c && d)})\r\n    \r\n    if(boools.length) {\r\n      drawPoint(boools[0], 1);\r\n      state = {...boools[0]};\r\n      condition = true;\r\n      tooltip.style.left = `${state.x + 5}px`;\r\n      tooltip.style.top = `${state.y - 35}px`;\r\n      tooltip.style.display = \'flex\';\r\n      tooltip.innerHTML = `Time: ${state.hourTemp.hour}:00, Temp: ${state.hourTemp.temp}Â°C`;\r\n    } \r\n    else if(!boools.length) {\r\n      drawPoint(state, 3, "#FFE74A");\r\n      condition = false;\r\n      state = {};\r\n      tooltip.style.display = \'none\';\r\n    } \r\n  })\r\n}\r\n\r\n\r\n\r\n\r\ngetLocation();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n')}]);